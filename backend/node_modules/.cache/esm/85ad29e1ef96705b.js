"use strict";;let getUserData,updateDbUser,deleteDbUser,authDb,statusDb,encrypt,decrypt;_ef9‍.x([["getUser",()=>getUser],["updateUser",()=>updateUser],["deleteUser",()=>deleteUser],["authCode",()=>authCode],["banCode",()=>banCode],["suspend",()=>suspend]]);_ef9‍.w("../dataAccessLayer/requete_data.mjs",[["getUserData",["getUserData"],function(v){getUserData=v}],["updateDbUser",["updateDbUser"],function(v){updateDbUser=v}],["deleteDbUser",["deleteDbUser"],function(v){deleteDbUser=v}],["authDb",["authDb"],function(v){authDb=v}],["statusDb",["statusDb"],function(v){statusDb=v}]]);_ef9‍.w("./crypter.mjs",[["encrypt",["encrypt"],function(v){encrypt=v}],["decrypt",["decrypt"],function(v){decrypt=v}]]);














       function getUser() {

    return getUserData().then((result) => {
        
        for(let i = 0, n = result.length; i < n; i++) {
            result[i].motDePasse = 'null';
        }
        return result;
    });
}

       function updateUser(id, nom, prenom, email, numero, typeUser, motDePasse) {

    motDePasse = encrypt(motDePasse);

    return updateDbUser(id, nom, prenom, email, numero, typeUser, motDePasse);
}

       function deleteUser(id) {

    return deleteDbUser(id);
}

       function authCode(email, motDePasse) {

    let statusAuth = '';

    return authDb(email).then( (result) => {

        console.log('T passé par la ');
        for(let i = 0, n = result.length; i < n; i++) {

            result[i].motDePasse = decrypt(result[i].motDePasse);
            if(result[i].motDePasse === motDePasse)
                statusAuth = {statusAuth : false};
            else 
                statusAuth = {statusAuth: true};
            
        }
        
        return statusAuth;
    });

}

       function banCode(id) {

    let status_compte = "Banni";

    return statusDb(id, status_compte);
}

       function suspend(id) {

    let status_compte = "Suspendu";

    return statusDb(id, status_compte);
}